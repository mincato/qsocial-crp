<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd        
        http://cxf.apache.org/jaxrs
        http://cxf.apache.org/schemas/jaxrs.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<import resource="cache.xml" />

	<context:property-placeholder location="${extPropDir:classpath:}application.properties" ignore-unresolvable="true"/>
	
	<bean id="zookeeperClient" init-method="start" destroy-method="close" class="org.apache.curator.framework.CuratorFrameworkFactory" factory-method="newClient">
 		<constructor-arg value="${app.zookeeper.host}"></constructor-arg>
 		<constructor-arg>
 			<bean class="org.apache.curator.retry.ExponentialBackoffRetry">
				<constructor-arg  value="1000"></constructor-arg>
				<constructor-arg  value="3"></constructor-arg>
			</bean>
 		</constructor-arg>
	</bean>
	
	<bean id="elasticConfig" class="com.qsocialnow.config.ElasticConfigFactory" factory-method="findConfig">
 		<constructor-arg ref="zookeeperClient"></constructor-arg>
 		<constructor-arg value="${app.elastic.config.configurator.path}"></constructor-arg>
	</bean>

	<bean id="domainElasticService" class="com.qsocialnow.elasticsearch.services.config.DomainService">
	</bean>
	
	<bean id="caseElasticService" class="com.qsocialnow.elasticsearch.services.cases.CaseService">
	</bean>
	
	<bean id="resolutionElasticService" class="com.qsocialnow.elasticsearch.services.config.ResolutionService">
	</bean>
	
	<bean id="triggerElasticService" class="com.qsocialnow.elasticsearch.services.config.TriggerService">
	</bean>
	
	<bean id="serviceDiscoveryRegister" class="com.qsocialnow.ServiceDiscoveryRegister" destroy-method="close">
	</bean>

	<aop:aspectj-autoproxy />

	<context:component-scan base-package="com.qsocialnow.service, com.qsocialnow.persistence"
		annotation-config="true" />
	<context:annotation-config />

</beans>