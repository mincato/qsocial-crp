<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/util
    	http://www.springframework.org/schema/util/spring-util-3.0.xsd">
    	
	<bean id="domainElasticService" class="com.qsocialnow.elasticsearch.services.config.DomainService">
		<property name="configurator" ref="elasticDomainConfig"></property>
		<property name="triggerService" ref="triggerElasticService"></property>
	</bean>
	
	<bean id="caseElasticService" class="com.qsocialnow.elasticsearch.services.cases.CaseService">
	   <constructor-arg ref="queueConfigurator" />
       <constructor-arg ref="configurationProvider" />
    </bean>
    
    <bean id="subjectService" class="com.qsocialnow.elasticsearch.services.cases.SubjectService">
        <constructor-arg ref="configurationProvider" />
    </bean>
   
   <bean id="registryService" class="com.qsocialnow.elasticsearch.services.cases.ActionRegistryService">
        <constructor-arg ref="configurationProvider" />
    </bean>
    
    <bean id="userResolverService" class="com.qsocialnow.elasticsearch.services.config.UserResolverService">
		<property name="configurator" ref="elasticDomainConfig"></property>
	</bean>
   
	<bean id="triggerElasticService" class="com.qsocialnow.elasticsearch.services.config.TriggerService">
		<property name="configurator" ref="elasticDomainConfig"></property>
		<property name="segmentService" ref="segmentElasticService"></property>
	</bean>
	
	<bean id="segmentElasticService" class="com.qsocialnow.elasticsearch.services.config.SegmentService">
		<property name="configurator" ref="elasticDomainConfig"></property>
	</bean>
	
    <bean id="configurationProvider" class="com.qsocialnow.eventresolver.factories.ElasticConfiguratorFactory" factory-method="getConfigurator">
         <constructor-arg ref="zookeeperClient"></constructor-arg>
         <constructor-arg value="${app.elastic.cases.configurator.path}" />
         <constructor-arg ref="elasticCaseConfigWatcher" />
    </bean>
    
    <bean id="elasticCaseConfigWatcher" class="com.qsocialnow.eventresolver.config.ConfigWatcher">
		<constructor-arg value="configurationProvider" />
		<constructor-arg>
			<value type="java.lang.Class">com.qsocialnow.elasticsearch.configuration.Configurator</value>
		</constructor-arg>
	</bean> 
    
	<bean id="elasticDomainConfig" class="com.qsocialnow.eventresolver.factories.ElasticConfiguratorFactory" factory-method="getConfigurator">
		<constructor-arg ref="zookeeperClient" />
		<constructor-arg value="${app.elastic.config.configurator.path}" />
		<constructor-arg ref="elasticDomainConfigWatcher" />
	</bean>
	
	<bean id="elasticDomainConfigWatcher" class="com.qsocialnow.eventresolver.config.ConfigWatcher">
		<constructor-arg value="elasticDomainConfig" />
		<constructor-arg>
			<value type="java.lang.Class">com.qsocialnow.elasticsearch.configuration.Configurator</value>
		</constructor-arg>
	</bean>
	
</beans>